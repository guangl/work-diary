name: Create Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install Samba dependencies
        run: |
          if [[ "$RUNNER_OS" == "Linux" ]]; then
            sudo apt-get update
            sudo apt-get install -y samba libsmbclient-dev
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            brew update
            brew install samba
          fi

      - name: Build project
        run: cargo build --release

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: work-diary-${{ matrix.os }}
          path: ./target/release/work-diary

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download Ubuntu artifact
        uses: actions/download-artifact@v2
        with:
          name: work-diary-ubuntu-latest
          path: ./artifacts/ubuntu

      - name: Download macOS artifact
        uses: actions/download-artifact@v2
        with:
          name: work-diary-macos-latest
          path: ./artifacts/macos

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Release notes for ${{ github.ref }}

      - name: Upload Ubuntu Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/ubuntu/work-diary
          asset_name: work-diary-linux
          asset_content_type: application/octet-stream

      - name: Upload macOS Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/macos/work-diary
          asset_name: work-diary-macos
          asset_content_type: application/octet-stream